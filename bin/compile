#!/usr/bin/env bash

# Exit if any command fails
set -e

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

# Function to output step messages
function output() {
    echo "-----> $*"
}

# Function to export env vars from ENV_DIR
export_env_vars() {
    output "Exporting environment variables"
    for env_file in $ENV_DIR/*; do
        if [ -f "$env_file" ]; then
            var_name=$(basename "$env_file")
            var_value=$(cat "$env_file")
            export "$var_name=$var_value"
            # Also make it available to subprocesses
            echo "export $var_name=\"$var_value\"" >> $BUILD_DIR/.profile.d/dreamfactory.sh
        fi
    done
}

# Create .profile.d directory for startup scripts
mkdir -p $BUILD_DIR/.profile.d
touch $BUILD_DIR/.profile.d/dreamfactory.sh
chmod +x $BUILD_DIR/.profile.d/dreamfactory.sh

# Export environment variables
if [ -d "$ENV_DIR" ]; then
    export_env_vars
fi

# Use Heroku's PHP buildpack for PHP dependencies
output "Using Heroku PHP buildpack for PHP dependencies"
# We don't need to install PHP ourselves as Heroku's PHP buildpack will handle this

# Check if we need to install DreamFactory or if it's already in the repo
if [ ! -f "$BUILD_DIR/composer.json" ] || ! grep -q "dreamfactory/dreamfactory" "$BUILD_DIR/composer.json"; then
    output "Installing DreamFactory from scratch"
    
    # Create a temporary directory for the installation
    TMP_DIR=$(mktemp -d)
    cd $TMP_DIR
    
    # Clone the DreamFactory repository
    git clone https://github.com/dreamfactorysoftware/dreamfactory.git .
    
    # Copy all files to the build directory
    cp -R * $BUILD_DIR/
    cp -R .* $BUILD_DIR/ 2>/dev/null || true
    
    cd $BUILD_DIR
else
    output "DreamFactory already exists in the repository"
fi

# Configure storage permissions
output "Configuring storage permissions"
mkdir -p $BUILD_DIR/storage/app
mkdir -p $BUILD_DIR/storage/framework/cache
mkdir -p $BUILD_DIR/storage/framework/sessions
mkdir -p $BUILD_DIR/storage/framework/views
mkdir -p $BUILD_DIR/storage/logs
mkdir -p $BUILD_DIR/bootstrap/cache

chmod -R 775 $BUILD_DIR/storage/
chmod -R 775 $BUILD_DIR/bootstrap/cache/

# Create Procfile if it doesn't exist
if [ ! -f "$BUILD_DIR/Procfile" ]; then
    output "Creating Procfile"
    echo "web: vendor/bin/heroku-php-apache2 public/" > $BUILD_DIR/Procfile
fi

# Create a post-deploy script to run migrations and clear caches
output "Creating post-deploy script"
cat > $BUILD_DIR/.profile.d/post-deploy.sh << 'EOF'
#!/usr/bin/env bash

# Generate application key if not set
if [ -z "$APP_KEY" ]; then
    php artisan key:generate --force
fi

# Run migrations
php artisan migrate --force

# Clear caches
php artisan cache:clear
php artisan config:clear
php artisan route:clear

# Optimize
php artisan optimize
EOF

chmod +x $BUILD_DIR/.profile.d/post-deploy.sh

output "DreamFactory buildpack installation completed" 